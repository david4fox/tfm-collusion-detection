## Libraries
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE, repos='http://cran.us.r-project.org')
sapply(pkg, require, character.only = TRUE)
}
packages <- c("shiny","shinyjs","shinythemes","shinyWidgets","shinydashboard","xlsx","plotly","igraph","network","sna","ndtv","dplyr","visNetwork")
ipak(packages)
runApp('LoadData.R')
runApp('SampleRD.R')
runApp('LoadData.R')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='daviddemiguel', token='0E62C2795EF57685A033223F1030D22D', secret='6M9LyhUHXu55azeuc52OicUJ82qFe4dl2sBWWaZV')
library(shiny); runApp('LoadData.R')
rsconnect::deployApp('LoadData.R')
rsconnect::deployApp('./LoadData.R')
getwd()
rsconnect::deployApp("E:/Storage/Github/TFM/LoadData.R")
rsconnect::deployApp("E:/Storage/Github/TFM/")
rsconnect::deployApp("E:/Storage/Github/TFM")
rsconnect::deployApp("E:/Storage/Github/TFM/LoadData")
deployApp("E:/Storage/Github/TFM/LoadData.R")
runApp('LoadData.R')
deployApp("E:/Storage/Github/TFM/LoadData.R")
packages <- c("shiny","shinyjs","shinythemes","shinyWidgets","shinydashboard","xlsx","plotly","igraph","network","sna","ndtv","dplyr","visNetwork","rsconnect")
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
ipak(packages)
## Libraries
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE, repos='http://cran.us.r-project.org')
sapply(pkg, require, character.only = TRUE)
}
ipak(packages)
deployApp("E:/Storage/Github/TFM/LoadData.R")
runApp('LoadData.R')
deployApp()
setAccountInfo(name='daviddemiguel', token='0E62C2795EF57685A033223F1030D22D', secret='6M9LyhUHXu55azeuc52OicUJ82qFe4dl2sBWWaZV')
deployApp("E:/Storage/Github/TFM/LoadData.R")
runApp('LoadData.R')
deployApp("E:/Storage/Github/TFM/LoadData.R")
deployApp()
deployApp("LoadData.R")
runApp('LoadData.R')
runApp('LoadData.R')
install.packages("devtools", lib="E:/Archivos de programa/R-3.5.2/library")
install.packages("shinyApp", lib="E:/Archivos de programa/R-3.5.2/library")
functionFirmList <- function(){
tableCSV <- read.csv("./tableCSV.csv", stringsAsFactors = FALSE)
for(i in seq(1+input$numberColumn,ncol(tableCSV),2)){
if(i == 1+input$numberColumn){
tmp <- data.frame(tableCSV[,i][!is.na(tableCSV[,i])], stringsAsFactors = FALSE)
tmp1 <- data.frame(tableCSV[,i], stringsAsFactors = FALSE)
}else{
tmp <- rbind(tmp,data.frame(tableCSV[,i][!is.na(tableCSV[,i])], stringsAsFactors = FALSE))
tmp1 <- cbind(tmp1,data.frame(tableCSV[,i], stringsAsFactors = FALSE))
}
}
allFirms <- data.frame(unique(tmp), stringsAsFactors = FALSE)
allFirms <- data.frame(allFirms[which(allFirms[,1]!=""),], stringsAsFactors = FALSE)
colnames(allFirms) <- "Firms"
for(i in seq(1+input$numberColumn,ncol(tableCSV),2)){
if(i == 1+input$numberColumn){
tmp <- tableCSV[,i]
}else{
tmp <- cbind(tmp, tableCSV[,i])
}
}
tableFirms <- data.frame("Contract" = tableCSV$Contract)
for(i in 1:nrow(allFirms)){
tmp1 <- data.frame("Contract" = which(tmp == allFirms[i,1], arr.ind = TRUE)[,1])
tmp1[,2] <- which(tmp == allFirms[i,1], arr.ind = TRUE)[,1]
tableFirms <- merge(x = tableFirms, y = tmp1, by = "Contract",all.x = TRUE)
}
colnames(tableFirms) <-c("Contract", allFirms[,1])
tableFirms[,2:ncol(tableFirms)][is.na(tableFirms[,2:ncol(tableFirms)])==FALSE] = "ok"
tableFirms[is.na(tableFirms)==TRUE] = 0
FinalTable <- data.frame("Firms" = allFirms[1], stringsAsFactors = FALSE)
FinalTable <<- FinalTable
tableFirms <<- tableFirms
allFirms <<- allFirms
requirement2 <<- "Hello"
}
functionFirmList()
functionFirmList <- function(numberColumn){
tableCSV <- read.csv("./tableCSV.csv", stringsAsFactors = FALSE)
for(i in seq(1+numberColumn,ncol(tableCSV),2)){
if(i == 1+numberColumn){
tmp <- data.frame(tableCSV[,i][!is.na(tableCSV[,i])], stringsAsFactors = FALSE)
tmp1 <- data.frame(tableCSV[,i], stringsAsFactors = FALSE)
}else{
tmp <- rbind(tmp,data.frame(tableCSV[,i][!is.na(tableCSV[,i])], stringsAsFactors = FALSE))
tmp1 <- cbind(tmp1,data.frame(tableCSV[,i], stringsAsFactors = FALSE))
}
}
allFirms <- data.frame(unique(tmp), stringsAsFactors = FALSE)
allFirms <- data.frame(allFirms[which(allFirms[,1]!=""),], stringsAsFactors = FALSE)
colnames(allFirms) <- "Firms"
for(i in seq(1+numberColumn,ncol(tableCSV),2)){
if(i == 1+numberColumn){
tmp <- tableCSV[,i]
}else{
tmp <- cbind(tmp, tableCSV[,i])
}
}
tableFirms <- data.frame("Contract" = tableCSV$Contract)
for(i in 1:nrow(allFirms)){
tmp1 <- data.frame("Contract" = which(tmp == allFirms[i,1], arr.ind = TRUE)[,1])
tmp1[,2] <- which(tmp == allFirms[i,1], arr.ind = TRUE)[,1]
tableFirms <- merge(x = tableFirms, y = tmp1, by = "Contract",all.x = TRUE)
}
colnames(tableFirms) <-c("Contract", allFirms[,1])
tableFirms[,2:ncol(tableFirms)][is.na(tableFirms[,2:ncol(tableFirms)])==FALSE] = "ok"
tableFirms[is.na(tableFirms)==TRUE] = 0
FinalTable <- data.frame("Firms" = allFirms[1], stringsAsFactors = FALSE)
FinalTable <<- FinalTable
tableFirms <<- tableFirms
allFirms <<- allFirms
requirement2 <<- "Hello"
}
functionFirmList(2)
networkFunction <- function(allFirms,tableFirms){
tableCSV <- read.csv("./tableCSV.csv", stringsAsFactors = FALSE)
nodes <- data.frame(id = 1:nrow(allFirms),
label = allFirms$Firms,
group = c("Group A"),
value = 0.5,
shape = c("circle"),
title = paste0("<p><b>", allFirms$Firms,"</b><br>Node !</p>"),
shadow = FALSE)
links <- data.frame("from" = 0, "to" = 0, "width" = 0, stringsAsFactors = FALSE)
for(firmFrom in 2:nrow(nodes)){
for(firmTo in (firmFrom+1):ncol(tableFirms)){
print(paste0(firmFrom-1,"-",firmTo-1))
if(length(which(tableFirms[,firmFrom] == "ok" & tableFirms[,firmTo] == "ok"))>0){
links <- rbind(links, c(firmFrom-1, firmTo-1, length(which(tableFirms[,firmFrom] == "ok" & tableFirms[,firmTo] == "ok"))))
}
}
}
links <- links[-1,]
edges <- data.frame(from = links$from,
to = links$to,length = 200,
width = links$width/3,
dashes = FALSE,
smooth = FALSE,
shadow = FALSE)
firmNetwork <- visNetwork(nodes, edges, height = "500px", width = "100%") %>%
visInteraction(dragNodes = TRUE,
dragView = FALSE,
zoomView = FALSE) %>%
visLayout(randomSeed = 42) %>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visConfigure(enabled = TRUE)
return(firmNetwork)
}
networkFunction(allFirms,tableFirms)
library("shiny")
library("shinyjs")
library("shinythemes")
library("shinyWidgets")
library("shinydashboard")
library("igraph")
library("network")
library("sna")
library("ndtv")
library("xlsx")
library("plotly")
library("dplyr")
library("visNetwork")
library("rsconnect")
networkFunction(allFirms,tableFirms)
tableCSV <- read.csv("./tableCSV.csv", stringsAsFactors = FALSE)
nodes <- data.frame(id = 1:nrow(allFirms),
label = allFirms$Firms,
group = c("Group A"),
value = 0.5,
shape = c("circle"),
title = paste0("<p><b>", allFirms$Firms,"</b><br>Node !</p>"),
shadow = FALSE)
links <- data.frame("from" = 0, "to" = 0, "width" = 0, stringsAsFactors = FALSE)
for(firmFrom in 2:nrow(nodes)){
for(firmTo in (firmFrom+1):ncol(tableFirms)){
print(paste0(firmFrom-1,"-",firmTo-1))
if(length(which(tableFirms[,firmFrom] == "ok" & tableFirms[,firmTo] == "ok"))>0){
links <- rbind(links, c(firmFrom-1, firmTo-1, length(which(tableFirms[,firmFrom] == "ok" & tableFirms[,firmTo] == "ok"))))
}
}
}
links <- links[-1,]
edges <- data.frame(from = links$from,
to = links$to,length = 200,
width = links$width/3,
dashes = FALSE,
smooth = FALSE,
shadow = FALSE)
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
class(net)
net
plot(net, edge.arrow.size=.4,vertex.label=NA)
firmNetwork <- visNetwork(nodes, edges, height = "500px", width = "100%") %>%
visInteraction(dragNodes = TRUE,
dragView = FALSE,
zoomView = FALSE) %>%
visLayout(randomSeed = 42) %>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visConfigure(enabled = TRUE)
firmNetwork <- visNetwork(nodes, edges, height = "500px", width = "100%") %>%
visInteraction(dragNodes = TRUE,
dragView = FALSE,
zoomView = FALSE) %>%
visLayout(randomSeed = 42) %>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visConfigure(enabled = TRUE)
firmNetwork
plot(net, edge.arrow.size=.4)
plot(net, edge.arrow.size=.2, edge.curved=0,
vertex.color="orange", vertex.frame.color="#555555",
vertex.label=V(net)$media, vertex.label.color="black",
vertex.label.cex=.7)
plot(net, edge.color="orange", vertex.color="gray50")
legend(x=-1.5, y=-1.1, c("Newspaper","Television", "Online News"), pch=21,
col="#777777", pt.bg=colrs, pt.cex=2, cex=.8, bty="n", ncol=1)
ceb <- cluster_edge_betweenness(net)
plot(ceb, net)
clp <- cluster_label_prop(net)
plot(clp, net)
cfg <- cluster_fast_greedy(as.undirected(net))
plot(cfg, as.undirected(net))
kc <- coreness(net, mode="all")
plot(net, vertex.size=kc*6, vertex.label=kc, vertex.color=colrs[kc])
membership(communities)
modularity(net)
modularity(net,membership())
cluster_walktrap(net)
modularity(net,membership(cluster_walktrap(net)))
plot(cluster_walktrap(net),net)
cluster_walktrap(net)
View(tableCSV)
View(tableCSV)
tableCSV1 <- data.frame(c(1,2,3,4,5,6,7,8,9,10)
stringsAsFactors = FALSE,)
tableCSV1 <- data.frame(c(1,2,3,4,5,6,7,8,9,10),
stringsAsFactors = FALSE)
View(tableCSV1)
tableCSV1 <- data.frame(Contracts=c(1,2,3,4,5,6,7,8,9,10),
stringsAsFactors = FALSE)
tableCSV1 <- data.frame(Contract=c(1,2,3,4,5,6,7,8,9,10),
Date=c("2018-01-01","2018-01-01","2018-01-01","2018-01-01","2018-01-01","2018-01-01","2018-01-01","2018-01-01","2018-01-01","2018-01-01"),
stringsAsFactors = FALSE)
tableCSV1 <- data.frame(Contract=c(1,2,3,4,5,6,7,8,9,10),
Date=c("2018-01-01","2018-01-01","2018-01-01","2018-01-01","2018-01-01","2018-01-01","2018-01-01","2018-01-01","2018-01-01","2018-01-01"),
Firm=c(1,2,3,4,5,6,7,8,9,10),
Bid=c(1,2,3,4,5,6,7,8,9,10),
Firm=c(1,2,3,4,5,6,7,8,9,10),
Bid=c(1,2,3,4,5,6,7,8,9,10),
stringsAsFactors = FALSE)
tableCSV1 <- data.frame(Contract=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26),
Date=c("2018-01-07","2018-01-14","2018-01-21","2018-01-28","2018-02-04","2018-02-11","2018-02-18","2018-02-25","2018-03-04","2018-03-11","2018-03-18","2018-03-25","2018-04-01","2018-04-08","2018-04-15","2018-04-22","2018-04-29","2018-05-06","2018-05-13","2018-05-20","2018-05-27","2018-06-03","2018-06-10","2018-06-17","2018-06-24","2018-07-01"),
Firm=c("Empresa 1","Empresa 6","Empresa 1","Empresa 6","Empresa 1","Empresa 6","Empresa 1","Empresa 6","Empresa 1","Empresa 6","Empresa 1","Empresa 6","Empresa 1","Empresa 6","Empresa 1","Empresa 6","Empresa 1","Empresa 6","Empresa 1","Empresa 6","Empresa 1","Empresa 6","Empresa 1","Empresa 6","Empresa 1","Empresa 6"),
Bid=c(19000,24000,26200,29000,25770,18200,29400,27070,25680,19200,25450,26590,26000,29920,18750,25350,27800,19100,25670,26050,17800,24200,28680,24680,18800,28380),
Firm=c("Empresa 2","Empresa 7","Empresa 2","Empresa 7","Empresa 2","Empresa 7","Empresa 2","Empresa 7","Empresa 2","Empresa 7","Empresa 2","Empresa 7","Empresa 2","Empresa 7","Empresa 2","Empresa 7","Empresa 2","Empresa 7","Empresa 2","Empresa 7","Empresa 2","Empresa 7","Empresa 2","Empresa 7","Empresa 2","Empresa 7"),
Bid=c(24720,19200,25660,26340,18000,24330,27850,17800,24140,27920,19000,27950,24480,27120,29110,28450,29260,27200,18500,29300,25090,19000,24880,29630,29350,19000),
Firm=c("Empresa 3","Empresa 8","Empresa 3","Empresa 8","Empresa 3","Empresa 8","Empresa 3","Empresa 8","Empresa 3","Empresa 8","Empresa 3","Empresa 8","Empresa 3","Empresa 8","Empresa 3","Empresa 8","Empresa 3","Empresa 8","Empresa 3","Empresa 8","Empresa 3","Empresa 8","Empresa 3","Empresa 8","Empresa 3","Empresa 8"),
Bid=c(6940,24640,18900,26720,26540,29710,18500,28040,27980,29680,28560,19000,28660,19500,24610,27610,24160,27250,28880,28800,25930,24870,19300,20000,24120,27610),
Firm=c("Empresa 4","Empresa 9","Empresa 4","Empresa 9","Empresa 4","Empresa 9","Empresa 4","Empresa 9","Empresa 4","Empresa 9","Empresa 4","Empresa 9","Empresa 4","Empresa 9","Empresa 4","Empresa 9","Empresa 4","Empresa 9","Empresa 4","Empresa 9","Empresa 4","Empresa 9","Empresa 4","Empresa 9","Empresa 4","Empresa 9"),
Bid=c(26520,26210,25340,19200,24480,29060,25370,29590,18500,25280,29420,25350,18500,28930,25760,18800,18600,29850,25450,18900,28540,26250,24430,28730,25170,29370),
Firm=c(NA,"Empresa 5",NA,NA,NA,NA,NA,NA,"Empresa 10",NA,NA,NA,NA,NA,NA,"Empresa 5",NA,NA,NA,NA,NA,"Empresa 10",NA,NA,"Empresa 6","Empresa 5"),
Bid=c(NA,24000,NA,NA,NA,NA,NA,NA,26000,NA,NA,NA,NA,NA,NA,23750,NA,NA,NA,NA,NA,25000,NA,NA,24130,23500),
Firm=c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,"Empresa 7","Empresa 10"),
Bid=c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,19000,24000),
Firm=c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,"Empresa 8",NA),
Bid=c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,26980,NA),
Firm=c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,"Empresa 9",NA),
Bid=c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,29210,NA),
stringsAsFactors = FALSE)
